version: '3.2'

volumes:
  grafana_data: {}
  alertmanager_data: {}
  prometheus_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090

  blackbox_exporter:
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    dns: 8.8.8.8
    restart: always
    volumes:
      - "./config:/config"
    command:
      - '--config.file=/config/blackbox.yml'

  alertmanager:
    image: prom/alertmanager
    restart: always
    ports:
      - "9093:9093"
    volumes:
      - "./data/alertmanager:/data"
      - "./config:/config"
    command:
      - "--config.file=/config/alertmanager.yml"
      - "--storage.path=/data"

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    hostname: monitoring
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: always

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    restart: always